let Router,database,generate_id;_033‍.x([["default",()=>_033‍.o]]);_033‍.w("express",[["Router",["Router"],function(v){Router=v}]]);_033‍.w("./../../index",[["database",["database"],function(v){database=v}]]);_033‍.w("./../../helpers/helpers",[["generate_id",["generate_id"],function(v){generate_id=v}]]);




const router = _033‍.a("Router",Router)();


router.get("/", (request, response) => {    
    const collection = _033‍.a("database",database).collection("Sellers");
    // get sellers info with available slots >= today
    collection.find({}).toArray((error, result) => {
        if (error) {
            return response.status(500).send(error);
        }
        response.send({ status: 200, data: result });
    });
});


router.post("/add", (request, response) => {
    const collection = _033‍.a("database",database).collection("Sellers");
    const seller = { _id: _033‍.a("generate_id",generate_id)(), available_slots: [new Date().toGMTString(), "Mon, 09 Mar 2020 18:50 GMT", "Mon, 09 Mar 2020 17:00 GMT"], created_at: new Date(), name: "Issa" };
    collection.insert(seller, (error, result) => {
        if (error) {
            return response.status(500).send(error);
        }
        response.send({ status: 200, message: "seller is added successfully!" });
    });
});

router.post("/:id/slots/add", (request, response) => {
    const collection = _033‍.a("database",database).collection("Sellers");
    const seller_id = request.params.id;
    const slot = request.body.slot || "Tue, 10 Mar 2020 18:00 GMT";
    collection.updateOne({ _id: seller_id }, { $push: { available_slots: slot } }, (error, result) => {
        if (error) {
            return response.status(500).send(error);
        }
        response.send({ status: 200, message: "Slot is added successfully!" });
    });
});

_033‍.d(router);_033‍.j(["default"]);
