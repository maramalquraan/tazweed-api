let Router,bodyParser,sellersRoutes,slotsRoutes;_a67‍.x([["default",()=>_a67‍.o]]);_a67‍.w("express",[["Router",["Router"],function(v){Router=v}]]);_a67‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_a67‍.w("./sellers",[["default",["sellersRoutes"],function(v){sellersRoutes=v}]]);_a67‍.w("./slots",[["default",["slotsRoutes"],function(v){slotsRoutes=v}]]);


const router = _a67‍.a("Router",Router)();

router.use(function (req, res, next) {
  res.header("Access-Control-Allow-Origin", "*"); // update to match the domain you will make the request from
  res.header(
    "Access-Control-Allow-Headers",
    "Origin, X-Requested-With, Content-Type, Accept, Authorization"
  );
  res.header("Access-Control-Allow-Methods", "GET, POST, OPTIONS, PUT, DELETE");
  next();
});

router.use(_a67‍.a("bodyParser",bodyParser).json());
router.use(_a67‍.a("bodyParser",bodyParser).urlencoded({ extended: true }));



router.use("/sellers", _a67‍.a("sellersRoutes",sellersRoutes));


router.use("/slots", _a67‍.a("slotsRoutes",slotsRoutes));



_a67‍.d(router);_a67‍.j(["default"]);
