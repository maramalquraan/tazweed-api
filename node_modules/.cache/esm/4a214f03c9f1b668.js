let express,parser,bodyParser,apiRoutes;_c9f‍.w("express",[["default",["express"],function(v){express=v}]]);_c9f‍.w("body-parser",[["default",["parser","bodyParser"],function(v){parser=bodyParser=v}]]);_c9f‍.w("./routes/index",[["default",["apiRoutes"],function(v){apiRoutes=v}]]);



const MongoClient = require("mongodb").MongoClient;
const ObjectId = require("mongodb").ObjectID;

const connection_url = "mongodb+srv://dbUser:dbUserPassword@cluster0-x8epq.mongodb.net/test?retryWrites=true&w=majority";

const db_name = "data";

const app = new express();

app.use(parser.urlencoded({ extended: true }));

app.use(function (req, res, next) {
    res.header("Access-Control-Allow-Origin", "*"); // update to match the domain you will make the request from
    res.header(
        "Access-Control-Allow-Headers",
        "Origin, X-Requested-With, Content-Type, Accept, Authorization"
    );
    res.header("Access-Control-Allow-Methods", "GET, POST, OPTIONS, PUT, DELETE");
    next();
});

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

app.get('/', (req, res) => {
    res.send("Welcome to Tazweed API");
});


var database, collection;

app.listen(8080, () => {
    MongoClient.connect(connection_url, { useNewUrlParser: true }, (error, client) => {
        if (error) {
            throw error;
        }
        database = client.db(db_name);
        collection = database.collection("sellers");
        _c9f‍.g.console.log("Connected to `" + db_name + "`!");
    });
});

app.get("/sellers", (request, response) => {
    collection.find({}).toArray((error, result) => {
        _c9f‍.g.console.log("here", result);

        if (error) {
            return response.status(500).send(error);
        }
        response.send(result);
    });
});

_c9f‍.g.console.log("Server running at PORT " + (process.env.PORT || 8080));
